{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the OpenRQM API specification.\n[OpenRQM Docs - Github](https://github.com/openrqm/openrqm-docs)\n",
    "version" : "1.0.0",
    "title" : "OpenRQM",
    "license" : {
      "name" : "LGPL-2.0-only",
      "url" : "https://spdx.org/licenses/LGPL-2.0-only.html#licenseText"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about OpenRQM",
    "url" : "https://github.com/openrqm/openrqm-docs"
  },
  "securityDefinitions" : {
    "APIKeyHeader" : {
      "type" : "apiKey",
      "in" : "header",
      "name" : "token",
      "description" : "The value of the RQMToken returned from login or register"
    }
  },
  "tags" : [ {
    "name" : "User Management",
    "description" : "Everything about user management"
  }, {
    "name" : "Access Groups",
    "description" : "Everything about access groups"
  }, {
    "name" : "User Access",
    "description" : "Everything about user access"
  }, {
    "name" : "Workspaces",
    "description" : "Operations for workspaces"
  }, {
    "name" : "Documents",
    "description" : "Operations about documents"
  }, {
    "name" : "Export",
    "description" : "Everything about document exports"
  }, {
    "name" : "Elements",
    "description" : "Everything about requirements"
  }, {
    "name" : "Links",
    "description" : "Everything about links between requirements"
  }, {
    "name" : "Themes",
    "description" : "Everything about themes of documents"
  } ],
  "paths" : {
    "/user" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "User Management" ],
        "summary" : "Get all users",
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "User logged in successfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "integer",
                "format" : "int64"
              }
            }
          }
        }
      }
    },
    "/user/register" : {
      "post" : {
        "tags" : [ "User Management" ],
        "summary" : "Register",
        "operationId" : "register",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMUser"
          }
        }, {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User registered in sucessfully",
            "schema" : {
              "$ref" : "#/definitions/RQMToken"
            }
          },
          "409" : {
            "description" : "Username already taken"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "User Management" ],
        "summary" : "Login",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "email",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User logged in successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMToken"
            }
          },
          "401" : {
            "description" : "Username or password incorrect"
          }
        }
      }
    },
    "/user/info" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "User Management" ],
        "summary" : "Get info of user",
        "operationId" : "getInfo",
        "parameters" : [ {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get user info successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMUser"
            }
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "User Management" ],
        "summary" : "Logout",
        "operationId" : "logout",
        "parameters" : [ {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "User logged out successfully"
          }
        }
      }
    },
    "/user/change" : {
      "patch" : {
        "tags" : [ "User Management" ],
        "summary" : "Change user",
        "operationId" : "changeUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMUser"
          }
        }, {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "newPasswordHash",
          "required" : true,
          "description" : "The SHA512 of the new password",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User changed successfully"
          }
        }
      }
    },
    "/user/delete" : {
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "User Management" ],
        "summary" : "Delete user",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "User successfully deleted"
          }
        }
      }
    },
    "/accessgroups" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Get all access groups",
        "operationId" : "getAccessgroups",
        "responses" : {
          "200" : {
            "description" : "All access group were fetched sucessfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMAccessGroup"
              }
            }
          }
        }
      }
    },
    "/accessgroup" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Get a specific access group",
        "operationId" : "getAccessgroup",
        "parameters" : [ {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Access groups fetched sucessfully",
            "schema" : {
              "$ref" : "#/definitions/RQMAccessGroup"
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Add an access group",
        "operationId" : "addAccessgroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "accessGroup",
          "required" : true,
          "description" : "The access group to create",
          "schema" : {
            "$ref" : "#/definitions/RQMAccessGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The access group was created by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Update an access group",
        "operationId" : "patchAccessgroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "accessGroup",
          "required" : true,
          "description" : "The access group to update",
          "schema" : {
            "$ref" : "#/definitions/RQMAccessGroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating access group successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Delete an access group",
        "operationId" : "deleteAccessgroup",
        "parameters" : [ {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The access group to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The access group was deleted successfully"
          }
        }
      }
    },
    "/accessgroup/users" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Get all users of a given access group",
        "operationId" : "getUsersOfAccessGroup",
        "parameters" : [ {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "All users were fetched sucessfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMUser"
              }
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Add a user to an access group",
        "operationId" : "addUserToAccessGroup",
        "parameters" : [ {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "userId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user was added to the access group by the backend"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Access Groups" ],
        "summary" : "Delete a user of an access group",
        "operationId" : "deleteUserOfAccessGroup",
        "parameters" : [ {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "userId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user was deleted successfully in the access group"
          }
        }
      }
    },
    "/workspaces" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Get all workspaces",
        "operationId" : "getWorkspaces",
        "responses" : {
          "200" : {
            "description" : "All workspaces were fetched sucessfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMWorkspace"
              }
            }
          }
        }
      }
    },
    "/workspace/accessgroups" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Get all access groups of a given workspace",
        "operationId" : "getAccessGroupsOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "All access groups were fetched sucessfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMWorkspaceAccessgroup"
              }
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Add an access group to a workspace",
        "operationId" : "addAccessGroupToWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "accessGroup",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspaceAccessgroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The access group was added by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Update an access group of a workspace",
        "operationId" : "patchAccessGroupOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "accessGroup",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspaceAccessgroup"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating access group of workspace successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Delete a workspace",
        "operationId" : "deleteAccessGroupOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "accessGroupId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The access group to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The access group of workspace was deleted successfully"
          }
        }
      }
    },
    "/workspace/users" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Get all users of a given workspace",
        "operationId" : "getUsersOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "All users were fetched sucessfully",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMWorkspaceUser"
              }
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Add a user to a workspace",
        "operationId" : "addUserToWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "user",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspaceUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user was added to the workspace by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Update a user of a workspace",
        "operationId" : "patchUserOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "user",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspaceUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating user of workspace successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Delete a user of a workspace",
        "operationId" : "deleteUserOfWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "userId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user was deleted successfully in the workspace"
          }
        }
      }
    },
    "/workspace" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Get a workspace",
        "operationId" : "getWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The workspace identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was fetched successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMWorkspace"
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Add a workspace",
        "operationId" : "postWorkspace",
        "parameters" : [ {
          "in" : "body",
          "name" : "workspace",
          "required" : true,
          "description" : "The workspace to create",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was created by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Update a workspace",
        "operationId" : "patchWorkspace",
        "parameters" : [ {
          "in" : "body",
          "name" : "workspace",
          "required" : true,
          "description" : "The workspace to update",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating workspace successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Workspaces" ],
        "summary" : "Delete a workspace",
        "operationId" : "deleteWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The workspace to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was deleted successfully"
          }
        }
      }
    },
    "/documents" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Get all documents",
        "operationId" : "getDocuments",
        "responses" : {
          "200" : {
            "description" : "Documents sucessfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMDocument"
              }
            }
          }
        }
      }
    },
    "/export/pdf" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Export" ],
        "summary" : "Export a document as PDF",
        "operationId" : "exportPdf",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to export"
        }, {
          "in" : "query",
          "name" : "templateId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The template to use for the export"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully exported",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "produces" : [ "application/pdf" ]
      }
    },
    "/export/pdf/templates" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Export" ],
        "summary" : "Get all PDF templates",
        "operationId" : "getPdfTemplates",
        "responses" : {
          "200" : {
            "description" : "PDF templates successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMTemplate"
              }
            }
          }
        }
      }
    },
    "/export/markdown" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Export" ],
        "summary" : "Export a document as Markdown",
        "operationId" : "exportMarkdown",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to export"
        }, {
          "in" : "query",
          "name" : "templateId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The template to use for the export"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully exported",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "produces" : [ "text/plain" ]
      }
    },
    "/export/markdown/templates" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Export" ],
        "summary" : "Get all Markdown templates",
        "operationId" : "getMarkdownTemplates",
        "responses" : {
          "200" : {
            "description" : "Markdown templates successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMTemplate"
              }
            }
          }
        }
      }
    },
    "/document" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Get a document",
        "operationId" : "getDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMDocument"
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Add a document",
        "operationId" : "postDocument",
        "parameters" : [ {
          "in" : "body",
          "name" : "document",
          "required" : true,
          "description" : "The document to create",
          "schema" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The document created by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Update a document",
        "operationId" : "patchDocument",
        "parameters" : [ {
          "in" : "body",
          "name" : "document",
          "required" : true,
          "description" : "The document to update",
          "schema" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating document successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Delete a document",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The document was deleted successfully"
          }
        }
      }
    },
    "/document/themes" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Themes" ],
        "summary" : "Get all themes of a document",
        "operationId" : "getThemesOfDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document id to identify the correct themes"
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetching themes successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMTheme"
              }
            }
          }
        }
      }
    },
    "/document/links" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Documents" ],
        "summary" : "Get all links of a document",
        "operationId" : "getLinksOfDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document id to identify the correct links"
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetching links successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMLinkDetails"
              }
            }
          }
        }
      }
    },
    "/theme" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Themes" ],
        "summary" : "Get a theme",
        "operationId" : "getTheme",
        "parameters" : [ {
          "in" : "query",
          "name" : "themeId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The theme id"
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetching theme successful",
            "schema" : {
              "$ref" : "#/definitions/RQMTheme"
            }
          }
        }
      },
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Themes" ],
        "summary" : "Create a new theme",
        "operationId" : "createTheme",
        "parameters" : [ {
          "in" : "body",
          "name" : "theme",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMTheme"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Creating theme successful"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Themes" ],
        "summary" : "Update a theme",
        "operationId" : "updateTheme",
        "parameters" : [ {
          "in" : "body",
          "name" : "theme",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMTheme"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating theme successful"
          }
        }
      }
    },
    "/theme/elementTypeColors" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Themes" ],
        "summary" : "Get all element type colors of a theme",
        "operationId" : "getElementTypeColorsOfTheme",
        "parameters" : [ {
          "in" : "query",
          "name" : "themeId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get ElementTypeColors successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMElementTypeColor"
              }
            }
          }
        }
      }
    },
    "/elements" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Get all elements",
        "operationId" : "getElements",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document id for which the elements are fetched"
        } ],
        "responses" : {
          "200" : {
            "description" : "Elements successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMElement"
              }
            }
          }
        }
      }
    },
    "/element" : {
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Add an element",
        "operationId" : "postElement",
        "parameters" : [ {
          "in" : "body",
          "required" : true,
          "name" : "element",
          "description" : "The element to create, if the element should be created at the highest level, the parentElementId shall be null",
          "schema" : {
            "$ref" : "#/definitions/RQMElement"
          }
        }, {
          "in" : "query",
          "name" : "aboveRank",
          "required" : true,
          "type" : "string",
          "description" : "The rank of the element above, if no above element exists this shall be set to aaaaaaaaaaaaaaaaaaaa"
        }, {
          "in" : "query",
          "name" : "belowRank",
          "required" : true,
          "type" : "string",
          "description" : "The rank of the element below, if no below element exists this shall be set to an empty string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The element created by the backend"
          }
        }
      },
      "patch" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Update an element",
        "operationId" : "patchElement",
        "parameters" : [ {
          "in" : "body",
          "name" : "element",
          "required" : true,
          "description" : "The element to update",
          "schema" : {
            "$ref" : "#/definitions/RQMElement"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating element successful"
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Delete an element",
        "operationId" : "deleteElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "elementId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The element to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting element successful"
          }
        }
      }
    },
    "/element/inlinks" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Get all links of a given element",
        "operationId" : "getIncomingLinksOfElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "elementId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the element"
        } ],
        "responses" : {
          "200" : {
            "description" : "Incoming links successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMLink"
              }
            }
          }
        }
      }
    },
    "/element/outlinks" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Get all links of a given element",
        "operationId" : "getOutgoingLinksOfElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "elementId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the element"
        } ],
        "responses" : {
          "200" : {
            "description" : "Outgoing links successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMLink"
              }
            }
          }
        }
      }
    },
    "/link" : {
      "post" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Links" ],
        "summary" : "Link an element",
        "operationId" : "linkElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "fromElementId",
          "required" : true,
          "description" : "The element that is the source of the link",
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "toElementId",
          "required" : true,
          "description" : "The element that is the target of the link",
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "linkTypeId",
          "required" : true,
          "description" : "The type of the link",
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Linking was successful",
            "schema" : {
              "$ref" : "#/definitions/RQMLink"
            }
          }
        }
      },
      "delete" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Links" ],
        "summary" : "Delete a link",
        "operationId" : "deleteLink",
        "parameters" : [ {
          "in" : "query",
          "name" : "linkId",
          "required" : true,
          "description" : "The id of the link",
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting link was successful"
          }
        }
      }
    },
    "/linkTypes" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Links" ],
        "summary" : "Get the link types",
        "operationId" : "getLinkTypes",
        "responses" : {
          "200" : {
            "description" : "LinkTypes successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMLinkType"
              }
            }
          }
        }
      }
    },
    "/elementTypes" : {
      "get" : {
        "security" : [ {
          "APIKeyHeader" : [ ]
        } ],
        "tags" : [ "Elements" ],
        "summary" : "Get all element types",
        "operationId" : "getElementTypes",
        "responses" : {
          "200" : {
            "description" : "ElementTypes successfully fetched",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RQMElementType"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "RQMWorkspace" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workspaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        },
        "documents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        }
      }
    },
    "RQMDocument" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "internalIdentifier" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalIdentifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "shortName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "confidentiality" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "languageId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "approverId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "reviewerText" : {
          "type" : "string"
        },
        "lastModifiedById" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModifiedOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "baselineMajor" : {
          "type" : "integer",
          "format" : "int64"
        },
        "baselineMinor" : {
          "type" : "integer",
          "format" : "int64"
        },
        "baselineReview" : {
          "type" : "integer",
          "format" : "int64"
        },
        "previousBaselineId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMElement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When creating an element the id is ignored by the backend because it generates one, when updating the element it has to be set"
        },
        "documentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When creating an element the documentId has to be set to assign the requirement to the correct document, it can not be updated."
        },
        "elementTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "content" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "parentElementId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMLink" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id of the link"
        },
        "fromElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "linkTypeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMLinkType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id of the link type"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMLinkDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id of the link"
        },
        "fromElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fromDocumentShortname" : {
          "type" : "string"
        },
        "fromDocumentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toDocumentShortname" : {
          "type" : "string"
        },
        "toDocumentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "linkTypeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMElementType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMToken" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "RQMTemplate" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMUser" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "surname" : {
          "type" : "string"
        },
        "department" : {
          "type" : "string"
        }
      }
    },
    "RQMAccessGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMWorkspaceAccessgroup" : {
      "type" : "object",
      "properties" : {
        "accessGroupId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "permissions" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMWorkspaceUser" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "permissions" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMTheme" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "linkFromHighlightColor" : {
          "type" : "string"
        },
        "linkToHighlightColor" : {
          "type" : "string"
        }
      }
    },
    "RQMElementTypeColor" : {
      "type" : "object",
      "properties" : {
        "themeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "elementTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "colorCodeHex" : {
          "type" : "string"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/OpenRQM/OpenRQM/1.0.0"
}