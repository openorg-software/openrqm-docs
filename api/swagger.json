{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the OpenRQM API specification.\n[OpenRQM Docs - Github](https://github.com/openrqm/openrqm-docs)\n",
    "version" : "1.0.0",
    "title" : "OpenRQM",
    "license" : {
      "name" : "LGPL-2.0-only",
      "url" : "https://spdx.org/licenses/LGPL-2.0-only.html#licenseText"
    }
  },
  "externalDocs" : {
    "description" : "Find out more about OpenRQM",
    "url" : "https://github.com/openrqm/openrqm-docs"
  },
  "tags" : [ {
    "name" : "User Management",
    "description" : "Everything about user management"
  }, {
    "name" : "Workspaces",
    "description" : "Operations for workspaces"
  }, {
    "name" : "Documents",
    "description" : "Operations about documents"
  }, {
    "name" : "Export",
    "description" : "Everything about document exports"
  }, {
    "name" : "Elements",
    "description" : "Everything about requirements"
  }, {
    "name" : "Links",
    "description" : "Everything about links between requirements"
  } ],
  "paths" : {
    "/user/register" : {
      "post" : {
        "tags" : [ "User Management" ],
        "summary" : "Register",
        "operationId" : "register",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMUser"
          }
        }, {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User registered in successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMToken"
            }
          },
          "409" : {
            "description" : "Username already taken"
          }
        }
      }
    },
    "/user/login" : {
      "get" : {
        "tags" : [ "User Management" ],
        "summary" : "Login",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "email",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User logged in successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMToken"
            }
          },
          "401" : {
            "description" : "Username or password incorrect"
          }
        }
      }
    },
    "/user/logout" : {
      "get" : {
        "tags" : [ "User Management" ],
        "summary" : "Logout",
        "operationId" : "logout",
        "parameters" : [ {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "User logged out successfully"
          }
        }
      }
    },
    "/user/change" : {
      "patch" : {
        "tags" : [ "User Management" ],
        "summary" : "Change user",
        "operationId" : "changeUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RQMUser"
          }
        }, {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "newPasswordHash",
          "required" : true,
          "description" : "The SHA512 of the new password",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User changed successfully"
          }
        }
      }
    },
    "/user/delete" : {
      "delete" : {
        "tags" : [ "User Management" ],
        "summary" : "Delete user",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "in" : "header",
          "name" : "passwordHash",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "name" : "id",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "User successfully deleted"
          }
        }
      }
    },
    "/workspaces" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Get all workspaces",
        "operationId" : "getWorkspaces",
        "responses" : {
          "200" : {
            "description" : "All workspaces were fetched sucessfully",
            "schema" : {
              "$ref" : "#/definitions/RQMWorkspaces"
            }
          }
        }
      }
    },
    "/workspace" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Get a workspace",
        "operationId" : "getWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The workspace identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was fetched successfully",
            "schema" : {
              "$ref" : "#/definitions/RQMWorkspace"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Add a workspace",
        "operationId" : "postWorkspace",
        "parameters" : [ {
          "in" : "body",
          "name" : "workspace",
          "required" : true,
          "description" : "The workspace to create",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was created by the backend"
          }
        }
      },
      "patch" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Update a workspace",
        "operationId" : "patchWorkspace",
        "parameters" : [ {
          "in" : "body",
          "name" : "workspace",
          "required" : true,
          "description" : "The workspace to update",
          "schema" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating workspace successful"
          }
        }
      },
      "delete" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Delete a workspace",
        "operationId" : "deleteWorkspace",
        "parameters" : [ {
          "in" : "query",
          "name" : "workspaceId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The workspace to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The workspace was deleted successfully"
          }
        }
      }
    },
    "/documents" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Get all documents",
        "operationId" : "getDocuments",
        "responses" : {
          "200" : {
            "description" : "Documents sucessfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMDocuments"
            }
          }
        }
      }
    },
    "/export/pdf" : {
      "get" : {
        "tags" : [ "Export" ],
        "summary" : "Export a document as PDF",
        "operationId" : "exportPdf",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to export"
        }, {
          "in" : "query",
          "name" : "templateId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The template to use for the export"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully exported",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "produces" : [ "application/pdf" ]
      }
    },
    "/export/pdf/templates" : {
      "get" : {
        "tags" : [ "Export" ],
        "summary" : "Get all PDF templates",
        "operationId" : "getPdfTemplates",
        "responses" : {
          "200" : {
            "description" : "PDF templates successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMTemplates"
            }
          }
        }
      }
    },
    "/export/markdown" : {
      "get" : {
        "tags" : [ "Export" ],
        "summary" : "Export a document as Markdown",
        "operationId" : "exportMarkdown",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to export"
        }, {
          "in" : "query",
          "name" : "templateId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The template to use for the export"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully exported",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "produces" : [ "text/plain" ]
      }
    },
    "/export/markdown/templates" : {
      "get" : {
        "tags" : [ "Export" ],
        "summary" : "Get all Markdown templates",
        "operationId" : "getMarkdownTemplates",
        "responses" : {
          "200" : {
            "description" : "Markdown templates successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMTemplates"
            }
          }
        }
      }
    },
    "/document" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Get a document",
        "operationId" : "getDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "Document successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMDocument"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "Add a document",
        "operationId" : "postDocument",
        "parameters" : [ {
          "in" : "body",
          "name" : "document",
          "required" : true,
          "description" : "The document to create",
          "schema" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The document created by the backend"
          }
        }
      },
      "patch" : {
        "tags" : [ "Documents" ],
        "summary" : "Update a document",
        "operationId" : "patchDocument",
        "parameters" : [ {
          "in" : "body",
          "name" : "document",
          "required" : true,
          "description" : "The document to update",
          "schema" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating document successful"
          }
        }
      },
      "delete" : {
        "tags" : [ "Documents" ],
        "summary" : "Delete a document",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "The document was deleted successfully"
          }
        }
      }
    },
    "/document/view" : {
      "get" : {
        "tags" : [ "Documents" ],
        "summary" : "Get all views of a document",
        "operationId" : "getViews",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document id to identify the correct views"
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetching views successful",
            "schema" : {
              "$ref" : "#/definitions/RQMViews"
            }
          }
        }
      }
    },
    "/elements" : {
      "get" : {
        "tags" : [ "Elements" ],
        "summary" : "Get all elements",
        "operationId" : "getElements",
        "parameters" : [ {
          "in" : "query",
          "name" : "documentId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The document id for which the elements are fetched"
        } ],
        "responses" : {
          "200" : {
            "description" : "Elements successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMElements"
            }
          }
        }
      }
    },
    "/element" : {
      "post" : {
        "tags" : [ "Elements" ],
        "summary" : "Add an element",
        "operationId" : "postElement",
        "parameters" : [ {
          "in" : "body",
          "required" : true,
          "name" : "element",
          "description" : "The element to create, if the element should be created at the highest level, the parentElementId shall be null",
          "schema" : {
            "$ref" : "#/definitions/RQMElement"
          }
        }, {
          "in" : "query",
          "name" : "aboveRank",
          "required" : true,
          "type" : "string",
          "description" : "The rank of the element above, if no above element exists this shall be set to aaaaaaaaaaaaaaaaaaaa"
        }, {
          "in" : "query",
          "name" : "belowRank",
          "required" : true,
          "type" : "string",
          "description" : "The rank of the element below, if not above element exists this shall be set to an empty string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The element created by the backend"
          }
        }
      },
      "patch" : {
        "tags" : [ "Elements" ],
        "summary" : "Update an element",
        "operationId" : "patchElement",
        "parameters" : [ {
          "in" : "body",
          "name" : "element",
          "required" : true,
          "description" : "The element to update",
          "schema" : {
            "$ref" : "#/definitions/RQMElement"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updating element successful"
          }
        }
      },
      "delete" : {
        "tags" : [ "Elements" ],
        "summary" : "Delete an element",
        "operationId" : "deleteElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "elementId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "description" : "The element to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleting element successful"
          }
        }
      }
    },
    "/link" : {
      "post" : {
        "tags" : [ "Links" ],
        "summary" : "Link an element",
        "operationId" : "linkElement",
        "parameters" : [ {
          "in" : "query",
          "name" : "fromElementId",
          "required" : true,
          "description" : "The element that is the source of the link",
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "toElementId",
          "required" : true,
          "description" : "The element that is the target of the link",
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "query",
          "name" : "linkTypeId",
          "required" : true,
          "description" : "The type of the link",
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Linking was successful",
            "schema" : {
              "$ref" : "#/definitions/RQMLink"
            }
          }
        }
      }
    },
    "/linkTypes" : {
      "get" : {
        "tags" : [ "Links" ],
        "summary" : "Get the link types",
        "operationId" : "getLinkTypes",
        "responses" : {
          "200" : {
            "description" : "LinkTypes successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMLinkTypes"
            }
          }
        }
      }
    },
    "/elementTypes" : {
      "get" : {
        "tags" : [ "Elements" ],
        "summary" : "Get all element types",
        "operationId" : "getElementTypes",
        "responses" : {
          "200" : {
            "description" : "ElementTypes successfully fetched",
            "schema" : {
              "$ref" : "#/definitions/RQMElementTypes"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "RQMWorkspaces" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMWorkspace"
      }
    },
    "RQMWorkspace" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workspaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RQMWorkspace"
          }
        },
        "documents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RQMDocument"
          }
        }
      }
    },
    "RQMDocuments" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMDocument"
      }
    },
    "RQMDocument" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "internalIdentifier" : {
          "type" : "integer",
          "format" : "int64"
        },
        "externalIdentifier" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "shortName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "confidentiality" : {
          "type" : "string"
        },
        "authorId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "languageId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "approverId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "reviewerText" : {
          "type" : "string"
        },
        "lastModifiedById" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastModifiedOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "baselineMajor" : {
          "type" : "integer",
          "format" : "int64"
        },
        "baselineMinor" : {
          "type" : "integer",
          "format" : "int64"
        },
        "baselineReview" : {
          "type" : "integer",
          "format" : "int64"
        },
        "previousBaselineId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMElement" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When creating an element the id is ignored by the backend because it generates one, when updating the element it has to be set"
        },
        "documentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When creating an element the documentId has to be set to assign the requirement to the correct document, it can not be updated."
        },
        "elementTypeId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "content" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "parentElementId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMLink" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id of the link"
        },
        "fromElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "toElementId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "linkTypeId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RQMLinkType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Id of the link type"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMLinkTypes" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMLinkType"
      }
    },
    "RQMElements" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMElement"
      }
    },
    "RQMElementType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMElementTypes" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMElementType"
      }
    },
    "RQMToken" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "RQMTemplate" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "RQMTemplates" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMTemplate"
      }
    },
    "RQMUser" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "surname" : {
          "type" : "string"
        },
        "department" : {
          "type" : "string"
        }
      }
    },
    "RQMViews" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RQMView"
      }
    },
    "RQMView" : {
      "type" : "object",
      "properties" : {
        "documentIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "elementTypeColors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RQMElementTypeColor"
          }
        }
      }
    },
    "RQMElementTypeColor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "colorCodeHex" : {
          "type" : "string"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/OpenRQM/OpenRQM/1.0.0"
}