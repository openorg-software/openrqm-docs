# OpenRQM Docs
# Installs node.js and the required tools to generate PDFs from the Markdown documentation.
# Downloads the swagger codegen and generates the spring boot server and dart client stubs

trigger:
- master
- development

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

# Install tools required to convert markdown to PDF
- script: |
    sudo apt-get install pandoc texlive
    npm install -g pandoc-plantuml
  displayName: 'install required tools'


- script: |
    pandoc -F pandoc-plantuml -o README.pdf README.md
    ls -al
  displayName: 'pandoc convert'

- script: |
    wget http://central.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.8/swagger-codegen-cli-2.4.8.jar -O swagger-codegen-cli.jar
    echo "Java Options"
    java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar config-help -l spring
    echo "dart options"
    java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar config-help -l dart
    mkdir generated/
    mkdir generated/spring/
    mkdir generated/dart/
    java -jar swagger-codegen-cli.jar generate \
      -i api/swagger.json \
      -l spring \
      -o generated/spring/
    cd generated/spring/
    tar -czf spring.tar.gz *
    cd ../..
    java -jar swagger-codegen-cli.jar generate \
      -i api/swagger.json \
      -l dart \
      -o generated/dart/
    cd generated/dart/
    tar -czf dart.tar.gz *
    cd ../..
  displayName: 'Swagger Codegen'

- script: |
    echo '##vso[task.setvariable variable=releasetag]release'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  displayName: 'Set Release Tag if master branch'

- script: |
    echo '##vso[task.setvariable variable=releasetag]development'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
  displayName: 'Set Release Tag if development branch'

- task: GithubRelease@0 
  condition: or(and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')), and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/development')))
  displayName: 'Create GitHub Release'      
  inputs:
    gitHubConnection: benjaminSchilling33
    repositoryName: openrqm/openrqm-docs
    action: edit
    tagSource: manual
    tag: $(releasetag) 
    assetUploadMode: replace
    assets: |
        $(Build.Repository.LocalPath)/README.pdf
        $(Build.Repository.LocalPath)/generated/spring/spring.tar.gz
        $(Build.Repository.LocalPath)/generated/dart/dart.tar.gz